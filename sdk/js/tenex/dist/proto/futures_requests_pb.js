// source: futures_requests.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf')
var goog = jspb
var global = Function('return this')()

goog.exportSymbol('proto.futures_requests.AccountDepositRequest', null, global)
goog.exportSymbol('proto.futures_requests.AccountWithdrawalRequest', null, global)
goog.exportSymbol('proto.futures_requests.CreateMarketRequest', null, global)
goog.exportSymbol('proto.futures_requests.CreateMarketplaceRequest', null, global)
goog.exportSymbol('proto.futures_requests.FuturesLimitOrderRequest', null, global)
goog.exportSymbol('proto.futures_requests.FuturesRequestType', null, global)
goog.exportSymbol('proto.futures_requests.UpdateMarketParamsRequest', null, global)
goog.exportSymbol('proto.futures_requests.UpdatePricesRequest', null, global)
goog.exportSymbol('proto.futures_requests.UpdateTimeRequest', null, global)
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.futures_requests.CreateMarketplaceRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.futures_requests.CreateMarketplaceRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.futures_requests.CreateMarketplaceRequest.displayName = 'proto.futures_requests.CreateMarketplaceRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.futures_requests.CreateMarketRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.futures_requests.CreateMarketRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.futures_requests.CreateMarketRequest.displayName = 'proto.futures_requests.CreateMarketRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.futures_requests.UpdateMarketParamsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.futures_requests.UpdateMarketParamsRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.futures_requests.UpdateMarketParamsRequest.displayName = 'proto.futures_requests.UpdateMarketParamsRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.futures_requests.UpdateTimeRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.futures_requests.UpdateTimeRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.futures_requests.UpdateTimeRequest.displayName = 'proto.futures_requests.UpdateTimeRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.futures_requests.UpdatePricesRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.futures_requests.UpdatePricesRequest.repeatedFields_, null)
}
goog.inherits(proto.futures_requests.UpdatePricesRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.futures_requests.UpdatePricesRequest.displayName = 'proto.futures_requests.UpdatePricesRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.futures_requests.AccountDepositRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.futures_requests.AccountDepositRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.futures_requests.AccountDepositRequest.displayName = 'proto.futures_requests.AccountDepositRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.futures_requests.AccountWithdrawalRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.futures_requests.AccountWithdrawalRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.futures_requests.AccountWithdrawalRequest.displayName = 'proto.futures_requests.AccountWithdrawalRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.futures_requests.FuturesLimitOrderRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.futures_requests.FuturesLimitOrderRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.futures_requests.FuturesLimitOrderRequest.displayName = 'proto.futures_requests.FuturesLimitOrderRequest'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.futures_requests.CreateMarketplaceRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.futures_requests.CreateMarketplaceRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.futures_requests.CreateMarketplaceRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.futures_requests.CreateMarketplaceRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        quoteAssetId: jspb.Message.getFieldWithDefault(msg, 1, 0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.futures_requests.CreateMarketplaceRequest}
 */
proto.futures_requests.CreateMarketplaceRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.futures_requests.CreateMarketplaceRequest()
  return proto.futures_requests.CreateMarketplaceRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.futures_requests.CreateMarketplaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.futures_requests.CreateMarketplaceRequest}
 */
proto.futures_requests.CreateMarketplaceRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setQuoteAssetId(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.futures_requests.CreateMarketplaceRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.futures_requests.CreateMarketplaceRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.futures_requests.CreateMarketplaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.futures_requests.CreateMarketplaceRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getQuoteAssetId()
  if (f !== 0) {
    writer.writeUint64(1, f)
  }
}

/**
 * optional uint64 quote_asset_id = 1;
 * @return {number}
 */
proto.futures_requests.CreateMarketplaceRequest.prototype.getQuoteAssetId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.CreateMarketplaceRequest} returns this
 */
proto.futures_requests.CreateMarketplaceRequest.prototype.setQuoteAssetId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.futures_requests.CreateMarketRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.futures_requests.CreateMarketRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.futures_requests.CreateMarketRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.futures_requests.CreateMarketRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        baseAssetId: jspb.Message.getFieldWithDefault(msg, 1, 0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.futures_requests.CreateMarketRequest}
 */
proto.futures_requests.CreateMarketRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.futures_requests.CreateMarketRequest()
  return proto.futures_requests.CreateMarketRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.futures_requests.CreateMarketRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.futures_requests.CreateMarketRequest}
 */
proto.futures_requests.CreateMarketRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setBaseAssetId(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.futures_requests.CreateMarketRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.futures_requests.CreateMarketRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.futures_requests.CreateMarketRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.futures_requests.CreateMarketRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getBaseAssetId()
  if (f !== 0) {
    writer.writeUint64(1, f)
  }
}

/**
 * optional uint64 base_asset_id = 1;
 * @return {number}
 */
proto.futures_requests.CreateMarketRequest.prototype.getBaseAssetId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.CreateMarketRequest} returns this
 */
proto.futures_requests.CreateMarketRequest.prototype.setBaseAssetId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.futures_requests.UpdateMarketParamsRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.futures_requests.UpdateMarketParamsRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.futures_requests.UpdateMarketParamsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.futures_requests.UpdateMarketParamsRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        baseAssetId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        maxLeverage: jspb.Message.getFieldWithDefault(msg, 2, 0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.futures_requests.UpdateMarketParamsRequest}
 */
proto.futures_requests.UpdateMarketParamsRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.futures_requests.UpdateMarketParamsRequest()
  return proto.futures_requests.UpdateMarketParamsRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.futures_requests.UpdateMarketParamsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.futures_requests.UpdateMarketParamsRequest}
 */
proto.futures_requests.UpdateMarketParamsRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setBaseAssetId(value)
        break
      case 2:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setMaxLeverage(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.futures_requests.UpdateMarketParamsRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.futures_requests.UpdateMarketParamsRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.futures_requests.UpdateMarketParamsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.futures_requests.UpdateMarketParamsRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getBaseAssetId()
  if (f !== 0) {
    writer.writeUint64(1, f)
  }
  f = message.getMaxLeverage()
  if (f !== 0) {
    writer.writeUint64(2, f)
  }
}

/**
 * optional uint64 base_asset_id = 1;
 * @return {number}
 */
proto.futures_requests.UpdateMarketParamsRequest.prototype.getBaseAssetId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.UpdateMarketParamsRequest} returns this
 */
proto.futures_requests.UpdateMarketParamsRequest.prototype.setBaseAssetId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

/**
 * optional uint64 max_leverage = 2;
 * @return {number}
 */
proto.futures_requests.UpdateMarketParamsRequest.prototype.getMaxLeverage = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.UpdateMarketParamsRequest} returns this
 */
proto.futures_requests.UpdateMarketParamsRequest.prototype.setMaxLeverage = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.futures_requests.UpdateTimeRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.futures_requests.UpdateTimeRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.futures_requests.UpdateTimeRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.futures_requests.UpdateTimeRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        latestTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.futures_requests.UpdateTimeRequest}
 */
proto.futures_requests.UpdateTimeRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.futures_requests.UpdateTimeRequest()
  return proto.futures_requests.UpdateTimeRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.futures_requests.UpdateTimeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.futures_requests.UpdateTimeRequest}
 */
proto.futures_requests.UpdateTimeRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setLatestTime(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.futures_requests.UpdateTimeRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.futures_requests.UpdateTimeRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.futures_requests.UpdateTimeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.futures_requests.UpdateTimeRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getLatestTime()
  if (f !== 0) {
    writer.writeUint64(1, f)
  }
}

/**
 * optional uint64 latest_time = 1;
 * @return {number}
 */
proto.futures_requests.UpdateTimeRequest.prototype.getLatestTime = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.UpdateTimeRequest} returns this
 */
proto.futures_requests.UpdateTimeRequest.prototype.setLatestTime = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.futures_requests.UpdatePricesRequest.repeatedFields_ = [1]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.futures_requests.UpdatePricesRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.futures_requests.UpdatePricesRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.futures_requests.UpdatePricesRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.futures_requests.UpdatePricesRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        latestPricesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.futures_requests.UpdatePricesRequest}
 */
proto.futures_requests.UpdatePricesRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.futures_requests.UpdatePricesRequest()
  return proto.futures_requests.UpdatePricesRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.futures_requests.UpdatePricesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.futures_requests.UpdatePricesRequest}
 */
proto.futures_requests.UpdatePricesRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var values = /** @type {!Array<number>} */ (
          reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]
        )
        for (var i = 0; i < values.length; i++) {
          msg.addLatestPrices(values[i])
        }
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.futures_requests.UpdatePricesRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.futures_requests.UpdatePricesRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.futures_requests.UpdatePricesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.futures_requests.UpdatePricesRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getLatestPricesList()
  if (f.length > 0) {
    writer.writePackedUint64(1, f)
  }
}

/**
 * repeated uint64 latest_prices = 1;
 * @return {!Array<number>}
 */
proto.futures_requests.UpdatePricesRequest.prototype.getLatestPricesList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1))
}

/**
 * @param {!Array<number>} value
 * @return {!proto.futures_requests.UpdatePricesRequest} returns this
 */
proto.futures_requests.UpdatePricesRequest.prototype.setLatestPricesList = function (value) {
  return jspb.Message.setField(this, 1, value || [])
}

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.futures_requests.UpdatePricesRequest} returns this
 */
proto.futures_requests.UpdatePricesRequest.prototype.addLatestPrices = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index)
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.futures_requests.UpdatePricesRequest} returns this
 */
proto.futures_requests.UpdatePricesRequest.prototype.clearLatestPricesList = function () {
  return this.setLatestPricesList([])
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.futures_requests.AccountDepositRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.futures_requests.AccountDepositRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.futures_requests.AccountDepositRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.futures_requests.AccountDepositRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        quantity: jspb.Message.getFieldWithDefault(msg, 1, 0),
        marketAdmin: msg.getMarketAdmin_asB64(),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.futures_requests.AccountDepositRequest}
 */
proto.futures_requests.AccountDepositRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.futures_requests.AccountDepositRequest()
  return proto.futures_requests.AccountDepositRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.futures_requests.AccountDepositRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.futures_requests.AccountDepositRequest}
 */
proto.futures_requests.AccountDepositRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt64())
        msg.setQuantity(value)
        break
      case 2:
        var value = /** @type {!Uint8Array} */ (reader.readBytes())
        msg.setMarketAdmin(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.futures_requests.AccountDepositRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.futures_requests.AccountDepositRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.futures_requests.AccountDepositRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.futures_requests.AccountDepositRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getQuantity()
  if (f !== 0) {
    writer.writeInt64(1, f)
  }
  f = message.getMarketAdmin_asU8()
  if (f.length > 0) {
    writer.writeBytes(2, f)
  }
}

/**
 * optional int64 quantity = 1;
 * @return {number}
 */
proto.futures_requests.AccountDepositRequest.prototype.getQuantity = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.AccountDepositRequest} returns this
 */
proto.futures_requests.AccountDepositRequest.prototype.setQuantity = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

/**
 * optional bytes market_admin = 2;
 * @return {!(string|Uint8Array)}
 */
proto.futures_requests.AccountDepositRequest.prototype.getMarketAdmin = function () {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * optional bytes market_admin = 2;
 * This is a type-conversion wrapper around `getMarketAdmin()`
 * @return {string}
 */
proto.futures_requests.AccountDepositRequest.prototype.getMarketAdmin_asB64 = function () {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getMarketAdmin()))
}

/**
 * optional bytes market_admin = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMarketAdmin()`
 * @return {!Uint8Array}
 */
proto.futures_requests.AccountDepositRequest.prototype.getMarketAdmin_asU8 = function () {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getMarketAdmin()))
}

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.futures_requests.AccountDepositRequest} returns this
 */
proto.futures_requests.AccountDepositRequest.prototype.setMarketAdmin = function (value) {
  return jspb.Message.setProto3BytesField(this, 2, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.futures_requests.AccountWithdrawalRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.futures_requests.AccountWithdrawalRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.futures_requests.AccountWithdrawalRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.futures_requests.AccountWithdrawalRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        quantity: jspb.Message.getFieldWithDefault(msg, 1, 0),
        marketAdmin: msg.getMarketAdmin_asB64(),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.futures_requests.AccountWithdrawalRequest}
 */
proto.futures_requests.AccountWithdrawalRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.futures_requests.AccountWithdrawalRequest()
  return proto.futures_requests.AccountWithdrawalRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.futures_requests.AccountWithdrawalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.futures_requests.AccountWithdrawalRequest}
 */
proto.futures_requests.AccountWithdrawalRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setQuantity(value)
        break
      case 2:
        var value = /** @type {!Uint8Array} */ (reader.readBytes())
        msg.setMarketAdmin(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.futures_requests.AccountWithdrawalRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.futures_requests.AccountWithdrawalRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.futures_requests.AccountWithdrawalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.futures_requests.AccountWithdrawalRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getQuantity()
  if (f !== 0) {
    writer.writeUint64(1, f)
  }
  f = message.getMarketAdmin_asU8()
  if (f.length > 0) {
    writer.writeBytes(2, f)
  }
}

/**
 * optional uint64 quantity = 1;
 * @return {number}
 */
proto.futures_requests.AccountWithdrawalRequest.prototype.getQuantity = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.AccountWithdrawalRequest} returns this
 */
proto.futures_requests.AccountWithdrawalRequest.prototype.setQuantity = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

/**
 * optional bytes market_admin = 2;
 * @return {!(string|Uint8Array)}
 */
proto.futures_requests.AccountWithdrawalRequest.prototype.getMarketAdmin = function () {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * optional bytes market_admin = 2;
 * This is a type-conversion wrapper around `getMarketAdmin()`
 * @return {string}
 */
proto.futures_requests.AccountWithdrawalRequest.prototype.getMarketAdmin_asB64 = function () {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getMarketAdmin()))
}

/**
 * optional bytes market_admin = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMarketAdmin()`
 * @return {!Uint8Array}
 */
proto.futures_requests.AccountWithdrawalRequest.prototype.getMarketAdmin_asU8 = function () {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getMarketAdmin()))
}

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.futures_requests.AccountWithdrawalRequest} returns this
 */
proto.futures_requests.AccountWithdrawalRequest.prototype.setMarketAdmin = function (value) {
  return jspb.Message.setProto3BytesField(this, 2, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.futures_requests.FuturesLimitOrderRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.futures_requests.FuturesLimitOrderRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.futures_requests.FuturesLimitOrderRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.futures_requests.FuturesLimitOrderRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        baseAssetId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        quoteAssetId: jspb.Message.getFieldWithDefault(msg, 2, 0),
        side: jspb.Message.getFieldWithDefault(msg, 3, 0),
        price: jspb.Message.getFieldWithDefault(msg, 4, 0),
        quantity: jspb.Message.getFieldWithDefault(msg, 5, 0),
        marketAdmin: msg.getMarketAdmin_asB64(),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.futures_requests.FuturesLimitOrderRequest}
 */
proto.futures_requests.FuturesLimitOrderRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.futures_requests.FuturesLimitOrderRequest()
  return proto.futures_requests.FuturesLimitOrderRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.futures_requests.FuturesLimitOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.futures_requests.FuturesLimitOrderRequest}
 */
proto.futures_requests.FuturesLimitOrderRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setBaseAssetId(value)
        break
      case 2:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setQuoteAssetId(value)
        break
      case 3:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setSide(value)
        break
      case 4:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setPrice(value)
        break
      case 5:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setQuantity(value)
        break
      case 6:
        var value = /** @type {!Uint8Array} */ (reader.readBytes())
        msg.setMarketAdmin(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.futures_requests.FuturesLimitOrderRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.futures_requests.FuturesLimitOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.futures_requests.FuturesLimitOrderRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getBaseAssetId()
  if (f !== 0) {
    writer.writeUint64(1, f)
  }
  f = message.getQuoteAssetId()
  if (f !== 0) {
    writer.writeUint64(2, f)
  }
  f = message.getSide()
  if (f !== 0) {
    writer.writeUint64(3, f)
  }
  f = message.getPrice()
  if (f !== 0) {
    writer.writeUint64(4, f)
  }
  f = message.getQuantity()
  if (f !== 0) {
    writer.writeUint64(5, f)
  }
  f = message.getMarketAdmin_asU8()
  if (f.length > 0) {
    writer.writeBytes(6, f)
  }
}

/**
 * optional uint64 base_asset_id = 1;
 * @return {number}
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.getBaseAssetId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.FuturesLimitOrderRequest} returns this
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.setBaseAssetId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value)
}

/**
 * optional uint64 quote_asset_id = 2;
 * @return {number}
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.getQuoteAssetId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.FuturesLimitOrderRequest} returns this
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.setQuoteAssetId = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value)
}

/**
 * optional uint64 side = 3;
 * @return {number}
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.getSide = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.FuturesLimitOrderRequest} returns this
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.setSide = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value)
}

/**
 * optional uint64 price = 4;
 * @return {number}
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.getPrice = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.FuturesLimitOrderRequest} returns this
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.setPrice = function (value) {
  return jspb.Message.setProto3IntField(this, 4, value)
}

/**
 * optional uint64 quantity = 5;
 * @return {number}
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.getQuantity = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0))
}

/**
 * @param {number} value
 * @return {!proto.futures_requests.FuturesLimitOrderRequest} returns this
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.setQuantity = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value)
}

/**
 * optional bytes market_admin = 6;
 * @return {!(string|Uint8Array)}
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.getMarketAdmin = function () {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * optional bytes market_admin = 6;
 * This is a type-conversion wrapper around `getMarketAdmin()`
 * @return {string}
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.getMarketAdmin_asB64 = function () {
  return /** @type {string} */ (jspb.Message.bytesAsB64(this.getMarketAdmin()))
}

/**
 * optional bytes market_admin = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMarketAdmin()`
 * @return {!Uint8Array}
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.getMarketAdmin_asU8 = function () {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getMarketAdmin()))
}

/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.futures_requests.FuturesLimitOrderRequest} returns this
 */
proto.futures_requests.FuturesLimitOrderRequest.prototype.setMarketAdmin = function (value) {
  return jspb.Message.setProto3BytesField(this, 6, value)
}

/**
 * @enum {number}
 */
proto.futures_requests.FuturesRequestType = {
  CREATE_MARKETPLACE: 0,
  CREATE_MARKET: 1,
  UPDATE_MARKET_PARAMS: 2,
  UPDATE_TIME: 3,
  UPDATE_PRICES: 4,
  ACCOUNT_DEPOSIT: 5,
  ACCOUNT_WITHDRAWAL: 6,
  FUTURES_LIMIT_ORDER: 7,
}

goog.object.extend(exports, proto.futures_requests)
